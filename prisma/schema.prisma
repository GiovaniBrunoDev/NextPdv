generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Produto {
  id            Int               @id @default(autoincrement())
  nome          String
  preco         Float
  custoUnitario Float
  outrosCustos  Float
  imagemUrl     String?
  videoUrl      String?
  gifUrl        String?
  variacoes     VariacaoProduto[]
}

model VariacaoProduto {
  id          Int          @id @default(autoincrement())
  produtoId   Int
  numeracao   String
  estoque     Int
  itens       ItemVenda[]
  itensPedido ItemPedido[] // ðŸŸ¢ relaÃ§Ã£o adicionada para pedidos
  produto     Produto      @relation(fields: [produtoId], references: [id], onDelete: Cascade)
}

model ItemVenda {
  id                Int             @id @default(autoincrement())
  vendaId           Int
  variacaoProdutoId Int
  quantidade        Int
  variacaoProduto   VariacaoProduto @relation(fields: [variacaoProdutoId], references: [id])
  venda             Venda           @relation(fields: [vendaId], references: [id])
}

model Venda {
  id             Int         @id @default(autoincrement())
  data           DateTime    @default(now())
  total          Float
  formaPagamento String?
  tipoEntrega    String?
  taxaEntrega    Float?
  entregador     String?
  endereco       String?
  clienteId      Int?
  itens          ItemVenda[]
  cliente        Cliente?    @relation(fields: [clienteId], references: [id])
}

model Cliente {
  id          Int      @id @default(autoincrement())
  nome        String
  telefone    String?
  endereco    String?
  bairro      String?
  cidade      String?
  estado      String?
  cep         String?
  observacoes String?
  vendas      Venda[]
  pedidos     Pedido[] // ðŸŸ¢ relaÃ§Ã£o adicionada para pedidos
}

model Meta {
  id           Int      @id @default(autoincrement())
  titulo       String
  descricao    String?
  valorMeta    Float
  tipo         String // "vendas", "lucro", etc.
  periodo      String // "dia", "semana", "mes"
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model Pedido {
  id             Int           @id @default(autoincrement())
  clienteId      Int?
  cliente        Cliente?      @relation(fields: [clienteId], references: [id])
  dataCriacao    DateTime      @default(now())
  dataEntrega    DateTime?
  horarioEntrega String?
  tipoEntrega    String?
  endereco       String?
  observacoes    String?
  entregador     String?
  formaPagamento String?
  taxaEntrega    Float?        @default(0)
  total          Float         @default(0)
  status         String        @default("reservado")
  itens          ItemPedido[]
}


model ItemPedido {
  id                Int              @id @default(autoincrement())
  pedidoId          Int
  variacaoProdutoId Int
  quantidade        Int
  precoUnitario     Float
  subtotal          Float
  pedido            Pedido           @relation(fields: [pedidoId], references: [id])
  variacaoProduto   VariacaoProduto  @relation(fields: [variacaoProdutoId], references: [id])
}


